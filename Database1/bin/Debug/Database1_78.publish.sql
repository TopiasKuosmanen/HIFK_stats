/*
Deployment script for ILVES

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "ILVES"
:setvar DefaultFilePrefix "ILVES"
:setvar DefaultDataPath "C:\Users\Topias Kuosmanen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Topias Kuosmanen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, DATA_FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[2020Friendlystats]...';


GO
CREATE TABLE [dbo].[2020Friendlystats] (
    [PlayerId]      INT NOT NULL,
    [Goals]         INT NULL,
    [Assists]       INT NULL,
    [YellowCards]   INT NULL,
    [RedCards]      INT NULL,
    [PlayedMinutes] INT NULL,
    [StartingXI]    INT NULL,
    [SubstitutedIn] INT NULL,
    [OnTheBench]    INT NULL,
    PRIMARY KEY CLUSTERED ([PlayerId] ASC)
);


GO
PRINT N'Creating [dbo].[2020Suomencupstats]...';


GO
CREATE TABLE [dbo].[2020Suomencupstats] (
    [PlayerId]      INT NOT NULL,
    [Goals]         INT NULL,
    [Assists]       INT NULL,
    [YellowCards]   INT NULL,
    [RedCards]      INT NULL,
    [PlayedMinutes] INT NULL,
    [StartingXI]    INT NULL,
    [SubstitutedIn] INT NULL,
    [OnTheBench]    INT NULL,
    PRIMARY KEY CLUSTERED ([PlayerId] ASC)
);


GO
PRINT N'Creating [dbo].[2020Veikkausliigastats]...';


GO
CREATE TABLE [dbo].[2020Veikkausliigastats] (
    [PlayerId]      INT NOT NULL,
    [Goals]         INT NULL,
    [Assists]       INT NULL,
    [YellowCards]   INT NULL,
    [RedCards]      INT NULL,
    [PlayedMinutes] INT NULL,
    [StartingXI]    INT NULL,
    [SubstitutedIn] INT NULL,
    [OnTheBench]    INT NULL,
    PRIMARY KEY CLUSTERED ([PlayerId] ASC)
);


GO
PRINT N'Creating [dbo].[Game]...';


GO
CREATE TABLE [dbo].[Game] (
    [Id]         INT           IDENTITY (1, 1) NOT NULL,
    [Opponent]   NVARCHAR (50) NOT NULL,
    [DateTime]   DATETIME      NULL,
    [Serie]      NVARCHAR (50) NOT NULL,
    [Result]     NCHAR (10)    NULL,
    [Stadion]    NVARCHAR (50) NULL,
    [Home_match] BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Nationality]...';


GO
CREATE TABLE [dbo].[Nationality] (
    [NationalityId] INT         IDENTITY (1, 1) NOT NULL,
    [Nationality]   NCHAR (100) NOT NULL,
    PRIMARY KEY CLUSTERED ([NationalityId] ASC)
);


GO
PRINT N'Creating [dbo].[Player]...';


GO
CREATE TABLE [dbo].[Player] (
    [Id]              INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]       NVARCHAR (50) NULL,
    [LastName]        NVARCHAR (50) NOT NULL,
    [Number]          INT           NULL,
    [YearOfAccession] INT           NULL,
    [ContractEndDate] DATE          NOT NULL,
    [BirthDate]       DATETIME      NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[PlayersNationality]...';


GO
CREATE TABLE [dbo].[PlayersNationality] (
    [PlayerId]      INT NOT NULL,
    [NationalityId] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Playersposition]...';


GO
CREATE TABLE [dbo].[Playersposition] (
    [PlayerId]   INT NOT NULL,
    [PositionId] INT NOT NULL
);


GO
PRINT N'Creating [dbo].[Position]...';


GO
CREATE TABLE [dbo].[Position] (
    [PositionId] INT        NOT NULL,
    [Position]   NCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([PositionId] ASC)
);


GO
PRINT N'Creating [dbo].[Staff]...';


GO
CREATE TABLE [dbo].[Staff] (
    [Id]                INT           IDENTITY (1, 1) NOT NULL,
    [FirstName]         NVARCHAR (50) NOT NULL,
    [LastName]          NVARCHAR (50) NOT NULL,
    [Role]              NVARCHAR (50) NULL,
    [ContractStartDate] DATE          NULL,
    [ContractEndDate]   DATE          NULL,
    [BirthDate]         DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [Goals];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [Assists];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [YellowCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [RedCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [PlayedMinutes];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [StartingXI];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [SubstitutedIn];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Friendlystats]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD DEFAULT 0 FOR [OnTheBench];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [Goals];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [Assists];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [YellowCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [RedCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [PlayedMinutes];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [StartingXI];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [SubstitutedIn];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Suomencupstats]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD DEFAULT 0 FOR [OnTheBench];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [Goals];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [Assists];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [YellowCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [RedCards];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [PlayedMinutes];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [StartingXI];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [SubstitutedIn];


GO
PRINT N'Creating unnamed constraint on [dbo].[2020Veikkausliigastats]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD DEFAULT 0 FOR [OnTheBench];


GO
PRINT N'Creating [dbo].[FK_2020FriendlyStats_Player]...';


GO
ALTER TABLE [dbo].[2020Friendlystats]
    ADD CONSTRAINT [FK_2020FriendlyStats_Player] FOREIGN KEY ([PlayerId]) REFERENCES [dbo].[Player] ([Id]);


GO
PRINT N'Creating [dbo].[FK_2020SuomencupStats_Player]...';


GO
ALTER TABLE [dbo].[2020Suomencupstats]
    ADD CONSTRAINT [FK_2020SuomencupStats_Player] FOREIGN KEY ([PlayerId]) REFERENCES [dbo].[Player] ([Id]);


GO
PRINT N'Creating [dbo].[FK_2020VeikkausliigaStats_Player]...';


GO
ALTER TABLE [dbo].[2020Veikkausliigastats]
    ADD CONSTRAINT [FK_2020VeikkausliigaStats_Player] FOREIGN KEY ([PlayerId]) REFERENCES [dbo].[Player] ([Id]);


GO
PRINT N'Creating [dbo].[Defender]...';


GO
CREATE VIEW [dbo].[Defender]
	AS SELECT p.FirstName, p.LastName, p.BirthDate, p.Number
	FROM Player p
	WHERE p.Id IN (SELECT DISTINCT PlayerId
				   FROM Playersposition
				   WHERE PositionId IN (2,3,4,14,15)
				   )
GO
PRINT N'Creating [dbo].[FriendlyGames2020]...';


GO
CREATE VIEW [dbo].[FriendlyGames2020]
	AS SELECT * FROM Game 
	WHERE game.Serie = 'Friendly'
	AND game.DateTime <= CONVERT(VARCHAR, '12/31/2020', 103) 
	AND game.DateTime >= CONVERT(VARCHAR, '1/1/2020', 103)
GO
PRINT N'Creating [dbo].[Goalkeeper]...';


GO
CREATE VIEW [dbo].[Goalkeeper]
	AS SELECT p.FirstName, p.LastName, p.BirthDate, p.Number
	FROM Player p
	WHERE p.Id IN (SELECT DISTINCT PlayerId
				   FROM Playersposition
				   WHERE PositionId = 1
				   )
GO
PRINT N'Creating [dbo].[Midfielder]...';


GO
CREATE VIEW [dbo].[Midfielder]
	AS SELECT p.FirstName, p.LastName, p.BirthDate, p.Number
	FROM Player p
	WHERE p.Id IN (SELECT DISTINCT PlayerId
				   FROM Playersposition
				   WHERE PositionId IN (5,6,7,8)
				   )
GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE VIEW [dbo].[Person]
	AS SELECT p.FirstName, p.LastName, P.BirthDate, FLOOR((CAST (GetDate() AS INTEGER) - CAST(P.BirthDate AS INTEGER)) / 365.25) AS Age
	FROM dbo.Player p
	UNION
	SELECT s.FirstName, s.LastName, s.BirthDate, FLOOR((CAST (GetDate() AS INTEGER) - CAST(S.BirthDate AS INTEGER)) / 365.25) AS Age
	FROM dbo.Staff s
GO
PRINT N'Creating [dbo].[Striker]...';


GO
CREATE VIEW [dbo].[Striker]
	AS SELECT p.FirstName, p.LastName, p.BirthDate, p.Number
	FROM Player p
	WHERE p.Id IN (SELECT DISTINCT PlayerId
				   FROM Playersposition
				   WHERE PositionId IN (9, 10, 11, 12, 13)
				   )
GO
PRINT N'Creating [dbo].[SuomencupGames2020]...';


GO
CREATE VIEW [dbo].[SuomencupGames2020]
	AS SELECT * FROM Game 
	WHERE game.Serie = 'Suomen Cup'
	AND game.DateTime <= CONVERT(VARCHAR, '12/31/2020', 103) 
	AND game.DateTime >= CONVERT(VARCHAR, '1/1/2020', 103)
GO
PRINT N'Creating [dbo].[TotalStats2020]...';


GO
CREATE VIEW [dbo].[TotalStats2020]
	AS 
	SELECT F.PlayerId, (F.Goals + S.Goals + V.Goals) AS Goals, 
		   (F.Assists + S.Assists + V.Assists) AS Assists,
		   (F.PlayedMinutes + S.PlayedMinutes + V.PlayedMinutes) AS PlayedMinutes,
		   (F.StartingXI + S.StartingXI + V.StartingXI) AS StartingXI,
		   (F.SubstitutedIn + S.SubstitutedIn + V.SubstitutedIn) AS SubstituTedIn,
		   (F.OnTheBench + S.OnTheBench + V.OnTheBench) AS OnTheBench 
	FROM [2020Friendlystats] F 
	JOIN [2020Suomencupstats] S ON F.PlayerId = S.PlayerId 
	JOIN [2020Veikkausliigastats] V ON F.PlayerId = V.PlayerId
GO
PRINT N'Creating [dbo].[VeikkausliigaGames2020]...';


GO
CREATE VIEW [dbo].[VeikkausliigaGames2020]
	AS SELECT * FROM Game 
	WHERE game.Serie = 'Veikkausliiga'
	AND game.DateTime <= CONVERT(VARCHAR, '12/31/2020', 103) 
	AND game.DateTime >= CONVERT(VARCHAR, '1/1/2020', 103)
GO
PRINT N'Creating [dbo].[Person_FilterByLastName]...';


GO
CREATE PROCEDURE [dbo].[Person_FilterByLastName]
	@LastName NVARCHAR (50)
AS
BEGIN
	SELECT p.FirstName, p.LastName
	FROM dbo.Player p
	WHERE p.LastName = @LastName
END
GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f2ddd04b-1a6a-4cf3-b18b-c373ff7443a3')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f2ddd04b-1a6a-4cf3-b18b-c373ff7443a3')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '11ca0069-9023-4d46-a215-516d25c8708d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('11ca0069-9023-4d46-a215-516d25c8708d')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7fb101ab-94ea-4a0f-a57f-a1de1a15a26b')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7fb101ab-94ea-4a0f-a57f-a1de1a15a26b')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'dae967e0-56fa-4807-a948-9484aef5b558')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('dae967e0-56fa-4807-a948-9484aef5b558')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '42416847-cb43-412a-84ae-e8d2208a84e5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('42416847-cb43-412a-84ae-e8d2208a84e5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cfd0d194-8142-4fa2-bbb7-80872f829ddd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cfd0d194-8142-4fa2-bbb7-80872f829ddd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '63331dd8-8e4a-44c2-a53d-e26e3339b80f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('63331dd8-8e4a-44c2-a53d-e26e3339b80f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e9d3dbcb-0a9a-4a1c-958b-61d49f2f12f7')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e9d3dbcb-0a9a-4a1c-958b-61d49f2f12f7')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '859c644e-7478-488f-809f-99e6be762820')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('859c644e-7478-488f-809f-99e6be762820')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '11fb23d3-4d95-4016-93e1-bf824475a64f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('11fb23d3-4d95-4016-93e1-bf824475a64f')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
