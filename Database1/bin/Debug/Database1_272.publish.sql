/*
Deployment script for HIFK

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HIFK"
:setvar DefaultFilePrefix "HIFK"
:setvar DefaultDataPath "C:\Users\Topias Kuosmanen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Topias Kuosmanen\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Game].[Referee] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Game])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[Tie_Win_Lose_ETW_ETL_PKW_PKL]...';


GO
ALTER TABLE [dbo].[Game] DROP CONSTRAINT [Tie_Win_Lose_ETW_ETL_PKW_PKL];


GO
PRINT N'Altering [dbo].[Game]...';


GO
ALTER TABLE [dbo].[Game] DROP COLUMN [Referee];


GO
ALTER TABLE [dbo].[Game]
    ADD [RefereeId] INT NULL;


GO
PRINT N'Creating [dbo].[Tie_Win_Lose_ETW_ETL_PKW_PKL]...';


GO
ALTER TABLE [dbo].[Game] WITH NOCHECK
    ADD CONSTRAINT [Tie_Win_Lose_ETW_ETL_PKW_PKL] CHECK (ResultCode BETWEEN 0 AND 6);


GO
PRINT N'Altering [dbo].[AddResult]...';


GO
ALTER PROCEDURE [dbo].[AddResult]
	@Id INT,
	@Result NVARCHAR(10),
	@ResultCode INT,
	@Attendance INT,
	@Referee INT
AS
BEGIN
	UPDATE Game
	SET Result = @Result, ResultCode = @ResultCode, Attendance = @Attendance, RefereeId = @Referee
	WHERE Game.Id = @Id
END
GO
PRINT N'Altering [dbo].[ResultsByLeague]...';


GO
ALTER PROCEDURE [dbo].[ResultsByLeague]
	@League NVARCHAR(50),
	@StartingDay DATETIME,
	@EndingDay DATETIME
AS

IF (@StartingDay = 0 AND @EndingDay = 0)
BEGIN
IF (@League = 'All')
BEGIN
	SELECT G.*, O.Team AS 'Opponent', (R.FirstName + ' ' + R.LastName) AS 'Referee'
	FROM Game G JOIN Opponent O ON G.OpponentId = O.Id JOIN Referee R ON R.Id = G.RefereeId
	WHERE Result IS NOT NULL
	ORDER BY DateTime DESC
END
ELSE
BEGIN
	SELECT G.*, O.Team AS 'Opponent', (R.FirstName + ' ' + R.LastName) AS 'Referee'
	FROM Game G JOIN Opponent O ON G.OpponentId = O.Id JOIN Referee R ON R.Id = G.RefereeId
	WHERE Result IS NOT NULL AND Serie = @League
	ORDER BY DateTime DESC
END
END
ELSE
BEGIN
IF (@League = 'All')
BEGIN
	SELECT G.*, O.Team AS 'Opponent', (R.FirstName + ' ' + R.LastName) AS 'Referee'
	FROM Game G JOIN Opponent O ON G.OpponentId = O.Id JOIN Referee R ON R.Id = G.RefereeId
	WHERE Result IS NOT NULL AND G.DateTime >= @StartingDay AND G.DateTime <= @EndingDay
	ORDER BY DateTime DESC
END
ELSE
BEGIN
	SELECT G.*, O.Team AS 'Opponent', (R.FirstName + ' ' + R.LastName) AS 'Referee'
	FROM Game G JOIN Opponent O ON G.OpponentId = O.Id JOIN Referee R ON R.Id = G.RefereeId
	WHERE Result IS NOT NULL AND G.DateTime >= @StartingDay AND G.DateTime <= @EndingDay AND Serie = @League
	ORDER BY DateTime DESC
END
END
GO
PRINT N'Refreshing [dbo].[AddGameProcedure]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[AddGameProcedure]';


GO
PRINT N'Refreshing [dbo].[DeleteGame]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[DeleteGame]';


GO
PRINT N'Refreshing [dbo].[FixturesByLeague]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[FixturesByLeague]';


GO
PRINT N'Refreshing [dbo].[GetAllGames]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetAllGames]';


GO
PRINT N'Refreshing [dbo].[GetAllStats]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetAllStats]';


GO
PRINT N'Refreshing [dbo].[GetGameWithoutTheResult]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetGameWithoutTheResult]';


GO
PRINT N'Refreshing [dbo].[GetStatsWithParameters]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[GetStatsWithParameters]';


GO
PRINT N'Refreshing [dbo].[UpdateResult]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[UpdateResult]';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Game] WITH CHECK CHECK CONSTRAINT [Tie_Win_Lose_ETW_ETL_PKW_PKL];


GO
PRINT N'Update complete.';


GO
